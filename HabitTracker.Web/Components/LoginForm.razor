@using Blazored.LocalStorage;
@using HabitTracker.Shared.DataTransferObjects;
@inject IUserService userService;
@inject ITokenService tokenService;
@inject ILocalStorageService localStorageService;
@inject NavigationManager UriHelper
@attribute [AllowAnonymous]

<div class="login-form">

    <h3>Login</h3>

    <form onsubmit="@Submit">
        <input type="text" @bind-value="UserName" placeholder="username" />
        <input type="password" @bind-value="Password" placeholder="password" />
        <p class="error @appearance">Incorrect password or username</p>
        <button type="submit">Login</button>
    </form>

</div>

@code {
    public string UserName;
    public string Password;
    public string appearance = "hide";

    private async void Submit()
    {

        UserForAuthenticationDto userAutentication = new UserForAuthenticationDto()
            {
                UserName = this.UserName,
                Password = this.Password
            };

        TokenDto token = await userService.LoginUser(userAutentication);
        await tokenService.SetToken(token);

        UserDto user = await userService.GetUserFromUsername(userAutentication.UserName);
        await localStorageService.SetItemAsync("userId", user.Id);

        StateHasChanged();
        UriHelper.NavigateTo("/");

        Console.WriteLine(token.AccessToken);
    }
}
