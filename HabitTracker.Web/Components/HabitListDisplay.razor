@using Blazored.LocalStorage;
@using HabitTracker.Shared.DataTransferObjects;
@inject IHabitListService habitListService;
@inject ILocalStorageService localStogareService;
@inject IMapper mapper;
@inject IUserService userService;

<h3>@habitList.Name</h3>

@if (habitList.Habits.Count == 0)
{
    <p>nic nie ma</p>
}
else
{
    foreach (Habit i in habitList.Habits)
    {
        <HabitDisplay settings="@settings" habit="i"></HabitDisplay>
    }
}

@code {
    [Parameter]
    public bool settings { get; set; }

    public HabitList habitList { get; set; }

    protected override async void OnInitialized()
    {
        int userId = await localStogareService.GetItemAsync<int>("userId");
        List<HabitListDto> getHabitList = await habitListService.GetHabitListByUserId(userId);
        if(getHabitList.Count == 0)
        {
            //create new list
            //habitList = new HabitList();
            //habitList.Name = "TODO";
            //habitList.Habits = new List<Habit>();

            HabitList newHabitList = new();
            newHabitList.Name = "All";
            newHabitList.Habits = new List<Habit>();
            UserHabitList userHabitList = new();
            //userHabitList.User = await 
        }
        else
        {
            habitList = mapper.Map<HabitList>(getHabitList.First());
        }

        base.OnInitialized();
    }
}
